#!/bin/bash

################################################################################
#      This file is part of CoreELEC - https://coreelec.org
#      Copyright (C) 2018-present CoreELEC (team (at) coreelec.org)
#      Copyright (C) 2016-18 kszaq (kszaquitto (at) gmail.com)
#      Copyright (C) 2023-presetn Su Yue (glass (at) fydeos.io)
#
#  CoreELEC is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 2 of the License, or
#  (at your option) any later version.
#
#  CoreELEC is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with CoreELEC.  If not, see <http://www.gnu.org/licenses/>.
################################################################################

IMAGE_KERNEL="/flash/kernel.img"
IMAGE_SYSTEM="/flash/SYSTEM"
IMAGE_DTB="/flash/dtb.img"
rootfs="/dev/CE_FLASH"
storage="/dev/CE_STORAGE"
root_part=""
data_part=""

BACKUP_DATE=$(date +%Y%m%d%H%M%S)

error()
{
	echo $1;
	exit 1
}

if [ ! -b "$rootfs" ] && [ -b /dev/system ]; then
    rootfs="/dev/system"
    storage="/dev/data"
fi

[ ! -b "$rootfs" ] && error "can't found rootfs(/dev/system or /dev/CE_FLASH)"
[ ! -b "$storage" ] && error "can't found storage(/dev/data or /dev/CE_STORAGE)"

install_to_nand() {
  if [ -f $IMAGE_KERNEL -a -f $IMAGE_SYSTEM ] ; then

    if grep -q ${rootfs} /proc/mounts ; then
      echo "Unmounting SYSTEM partiton."
      umount -f ${rootfs} || exit 1
    fi
    mkdir -p /tmp/system

    mount -o rw,remount /flash

    echo -n "Formatting SYSTEM partition..."
    mke2fs -F -q -t ext4 -L SYSTEM ${rootfs} || exit 1
    echo "done."

    echo -n "Copying SYSTEM files..."
    mount -o rw ${rootfs} /tmp/system
    cp -pPR /flash/. /tmp/system && sync
    export $(/sbin/fw_printenv mac)
    export $(/sbin/fw_printenv mac_wifi)

    sed -e "s/mac_wifi=.........../mac_wifi=${mac_wifi}/" -i /tmp/system/boot.ini
    sed -e "s/bootargs=.* BOOT_I/bootargs=boot=LABEL=SYSTEM disk=LABEL=DATA BOOTI/" -i /tmp/system/boot.ini
    echo "done."

    umount /tmp/system

    choice=y
    case "$choice" in
      [nN]*)
        choice=y
        case "$choice" in
          [nN]*)
            ;;
          *)
            echo -n "Formatting DATA partition..."
            mke2fs -F -q -t ext4 -L DATA ${storage} > /dev/null
            echo "done."
        esac  
        ;;
      *)
        echo -n "Formatting DATA partition..."
        mke2fs -F -q -t ext4 -L DATA ${storage} > /dev/null
        echo "done."

        echo -n "Stopping Kodi..."
        systemctl stop kodi
        echo "done."
        echo "Copying user data..."
        mkdir -p /tmp/data
        mount -o rw ${storage} /tmp/data
        cp -pPR /storage/. /tmp/data
        ;;
    esac

    echo "All done!"
    echo "WARNING: If your internal memory layout is different from standard Amlogic, you have to perform this operation again!"
    echo "Your system will reboot from internal memory."
    echo ""

    root_part="$(printf "%x" $root_part)"
    choice=y
    case "$choice" in
      [yY]*)
        /usr/sbin/fw_setenv start_autoscript 'if usb start ; then run start_usb_autoscript; fi; for i in 0 1 2 3 4 6 7 8 9 a b c d e; do if ext4load mmc 1:${i} 1020000 /s905_autoscript; then autoscr 1020000; fi; done'
        #/usr/sbin/reboot
        shutdown now
        ;;
    esac

  else
    echo "No LE image found on /flash! Exiting..."
  fi
}

if [ ! -b ${rootfs} -o ! -b ${storage} ]; then
  echo "One of BOOT, SYTEM, DATA partitions is missing."
  echo "Make sure that you are using a correct device tree and a device with internal memory!"
  exit 0
fi

echo "This script will erase BOOT, SYSTEM, DATA and DTB on your device"
echo "and install LE that you booted from SD card/USB drive."
echo ""
echo "It will create a backup of device tree and recovery partition on your boot media."
echo ""
echo "The script does not have any safeguards!"
echo ""

choice=yes
case "$choice" in
  yes) install_to_nand ;;
esac
